-- MySQL Script generated by MySQL Workbench
-- Sun Jan 17 13:19:58 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema BurgerCity
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema BurgerCity
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `BurgerCity` DEFAULT CHARACTER SET utf8 ;
USE `BurgerCity` ;

-- -----------------------------------------------------
-- Table `BurgerCity`.`Products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BurgerCity`.`Products` (
  `productsId` INT NOT NULL AUTO_INCREMENT,
  `createdAt` TIMESTAMP NOT NULL,
  `updatedAt` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  `description` VARCHAR(255) NOT NULL,
  `pictureURL` VARCHAR(255) NOT NULL,
  `altText` VARCHAR(255) NOT NULL,
  `favorites` TINYINT NOT NULL,
  `price` DECIMAL(15,2) NULL,
  PRIMARY KEY (`productsId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BurgerCity`.`Category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BurgerCity`.`Category` (
  `categoryId` INT NOT NULL AUTO_INCREMENT,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedAt` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  `categoryName` VARCHAR(255) NOT NULL,
  `description` VARCHAR(45) NULL,
  PRIMARY KEY (`categoryId`));


-- -----------------------------------------------------
-- Table `BurgerCity`.`CategoryHelper`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BurgerCity`.`CategoryHelper` (
  `CategoryHelperId` INT NOT NULL AUTO_INCREMENT,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedAt` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  `Category_categoryId` INT NOT NULL,
  `Products_productsId` INT NOT NULL,
  PRIMARY KEY (`CategoryHelperId`),
  INDEX `fk_CategoryHelper_Category1_idx` (`Category_categoryId` ASC) VISIBLE,
  INDEX `fk_CategoryHelper_Products1_idx` (`Products_productsId` ASC) VISIBLE,
  CONSTRAINT `fk_CategoryHelper_Category1`
    FOREIGN KEY (`Category_categoryId`)
    REFERENCES `BurgerCity`.`Category` (`categoryId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CategoryHelper_Products1`
    FOREIGN KEY (`Products_productsId`)
    REFERENCES `BurgerCity`.`Products` (`productsId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `BurgerCity`.`Adress`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BurgerCity`.`Adress` (
  `adressId` INT NOT NULL AUTO_INCREMENT,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedAt` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  `zipCode` VARCHAR(12) NOT NULL,
  `city` VARCHAR(60) NOT NULL,
  `street` VARCHAR(200) NOT NULL,
  `number` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`adressId`));


-- -----------------------------------------------------
-- Table `BurgerCity`.`Account`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BurgerCity`.`Account` (
  `accountId` INT NOT NULL AUTO_INCREMENT,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedAt` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  `email` VARCHAR(320) NOT NULL,
  `passwordHash` VARCHAR(255) NOT NULL,
  `birthday` DATE NOT NULL,
  `firstName` VARCHAR(50) NOT NULL,
  `lastName` VARCHAR(50) NOT NULL,
  `phoneNumber` VARCHAR(50) NOT NULL,
  `isAdmin` TINYINT NOT NULL,
  PRIMARY KEY (`accountId`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `BurgerCity`.`Orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BurgerCity`.`Orders` (
  `orderId` INT NOT NULL AUTO_INCREMENT,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedAt` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  `orderDate` DATE NOT NULL,
  `customerId` INT NOT NULL,
  `deliveryAdressId` INT NOT NULL,
  `deliveryInformation` VARCHAR(255) NULL,
  PRIMARY KEY (`orderId`),
  INDEX `fk_Orders_Adress1_idx` (`deliveryAdressId` ASC) VISIBLE,
  INDEX `fk_Orders_Account1_idx` (`customerId` ASC) VISIBLE,
  CONSTRAINT `fk_Orders_Adress1`
    FOREIGN KEY (`deliveryAdressId`)
    REFERENCES `BurgerCity`.`Adress` (`adressId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Orders_Account1`
    FOREIGN KEY (`customerId`)
    REFERENCES `BurgerCity`.`Account` (`accountId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `BurgerCity`.`OrderItems`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BurgerCity`.`OrderItems` (
  `ordersItemsId` INT NOT NULL AUTO_INCREMENT,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedAt` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  `productid` INT NOT NULL,
  `quantity` INT NOT NULL,
  `orderId` INT NOT NULL,
  PRIMARY KEY (`ordersItemsId`),
  INDEX `fk_OrderItems_Products1_idx` (`productid` ASC) VISIBLE,
  INDEX `fk_OrderItems_Orders1_idx` (`orderId` ASC) VISIBLE,
  CONSTRAINT `fk_OrderItems_Products1`
    FOREIGN KEY (`productid`)
    REFERENCES `BurgerCity`.`Products` (`productsId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_OrderItems_Orders1`
    FOREIGN KEY (`orderId`)
    REFERENCES `BurgerCity`.`Orders` (`orderId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `BurgerCity`.`AdressHelper`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BurgerCity`.`AdressHelper` (
  `adresshelperId` INT NOT NULL AUTO_INCREMENT,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedAt` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  `addressId` INT NOT NULL,
  `Account_accountId` INT NOT NULL,
  PRIMARY KEY (`adresshelperId`),
  INDEX `fk_AdressHelper_Adress1_idx` (`addressId` ASC) VISIBLE,
  INDEX `fk_AdressHelper_Account1_idx` (`Account_accountId` ASC) VISIBLE,
  CONSTRAINT `fk_AdressHelper_Adress1`
    FOREIGN KEY (`addressId`)
    REFERENCES `BurgerCity`.`Adress` (`adressId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_AdressHelper_Account1`
    FOREIGN KEY (`Account_accountId`)
    REFERENCES `BurgerCity`.`Account` (`accountId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `BurgerCity`.`Ingedients`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BurgerCity`.`Ingedients` (
  `ingedientsId` INT NOT NULL AUTO_INCREMENT,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedAt` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  `description` VARCHAR(255) NOT NULL,
  `numberOfStock` INT NOT NULL,
  PRIMARY KEY (`ingedientsId`));


-- -----------------------------------------------------
-- Table `BurgerCity`.`ProductHelper`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BurgerCity`.`ProductHelper` (
  `productHelperId` INT NOT NULL AUTO_INCREMENT,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedAt` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  `productId` INT NOT NULL,
  `ingredientsId` INT NOT NULL,
  PRIMARY KEY (`productHelperId`),
  INDEX `fk_ProductHelper_Products1_idx` (`productId` ASC) VISIBLE,
  INDEX `fk_ProductHelper_Ingedients1_idx` (`ingredientsId` ASC) VISIBLE,
  CONSTRAINT `fk_ProductHelper_Products1`
    FOREIGN KEY (`productId`)
    REFERENCES `BurgerCity`.`Products` (`productsId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ProductHelper_Ingedients1`
    FOREIGN KEY (`ingredientsId`)
    REFERENCES `BurgerCity`.`Ingedients` (`ingedientsId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
